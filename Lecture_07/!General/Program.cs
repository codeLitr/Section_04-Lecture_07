/*
Лекция 7. Дополнительная лекция. Рекурсия: продолжение

>>> Рекурсивная функция - это функция, вызывающая сама себя. В теле функции есть то, что вызывает функцию.
    Что важно при описании рекурсии?
    1. Описать условие выхода.

>>> Двоичное дерево (https://ru.wikipedia.org/wiki/Двоичное_дерево) — иерархическая структура данных, в которой каждый узел имеет не более двух потомков (детей). 
    Как правило, первый называется родительским узлом, а дети называются левым и правым наследниками. Двоичное дерево является упорядоченным ориентированным деревом[1].
    Для практических целей обычно используют два подвида двоичных деревьев — двоичное дерево поиска и двоичная куча.

    Обход дерева (известный также как поиск по дереву) (https://ru.wikipedia.org/wiki/Обход_дерева) — вид обхода графа[en], обусловливающий процесс посещения (проверки и/или обновления) каждого узла структуры дерева 
    данных ровно один раз. Такие обходы классифицируются по порядку, в котором узлы посещаются. Алгоритмы в статье относятся к двоичным деревьям, но могут быть обобщены и для других деревьев.

    Где можно применять дерево: 
    > HTML-код - т.е. при помощи алгоритмов дерева можно ходить по сайту и собирать информацию (парсить). 
      Например, необходимо собрать инфо о товарах с сайта-магазина и разместить эту инфо у себя на сайте.

    > При работе с файлами JSON и XML. Например, эти файлы используются при передаче данных от клиента к серверу. 

    > Разбор выражений - пример разбора выражения см. в 04_BinaryTtree-Recursion.

    > Анализ текста.

    > Обход графа.

>>> 
*/